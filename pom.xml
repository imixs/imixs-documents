<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.imixs.documents</groupId>
	<artifactId>imixs-documents</artifactId>
	<packaging>war</packaging>
	<name>Imixs Documents</name>
	<version>2.2.0</version>
	<description>Imixs Documents - A collaboration platform for documents. </description>
	<organization>
		<name>Imixs Software Solutions GmbH</name>
		<url>http://www.imixs.com</url>
	</organization>
	<inceptionYear>2019</inceptionYear>
	<developers>
		<developer>
			<id>rsoika</id>
			<name>Ralph Soika</name>
			<email>ralph.soika@imixs.com</email>
			<url>http://blog.imixs.org/</url>
			<organization>Imixs Software Solutions GmbH</organization>
			<organizationUrl>http://www.imixs.com</organizationUrl>
			<roles>
				<role>developer</role>
				<role>testing</role>
			</roles>
			<timezone>2</timezone>
		</developer>
		<developer>
			<id>gaheinle</id>
			<name>Gaby Heinle</name>
			<email />
			<url />
			<organization>Imixs Software Solutions GmbH</organization>
			<organizationUrl>http://www.imixs.com</organizationUrl>
			<roles>
				<role>developer</role>
				<role>testing</role>
			</roles>
			<timezone>2</timezone>
		</developer>
	</developers>

	<scm>
		<connection>scm:git:git@github.com:imixs/imixs-documents.git</connection>
		<developerConnection>scm:git:git@github.com:imixs/imixs-documents.git</developerConnection>
		<url>https://github.com/imixs/imixs-documents/</url>
	</scm>

	<issueManagement>
		<system>GitHub</system>
		<url>https://github.com/imixs/imixs-documents/issues</url>
	</issueManagement>

	<properties>
		<java.source>11</java.source>
		<java.target>11</java.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<custom.webResources>src/main/webapp</custom.webResources>
		<custom.unpackTypes>war</custom.unpackTypes>

		<!-- Build Time -->
		<org.imixs.build.timestamp>${maven.build.timestamp}</org.imixs.build.timestamp>
		<maven.build.timestamp.format>yyyyMMddHHmmss</maven.build.timestamp.format>

		<!-- Dependency Versions -->
		<jakarta.version>10.0.0</jakarta.version>
		<org.imixs.workflow.version>6.1.1-SNAPSHOT</org.imixs.workflow.version>
		<org.imixs.archive.version>3.1.0-SNAPSHOT</org.imixs.archive.version>
		<org.imixs.office.version>5.1.0-SNAPSHOT</org.imixs.office.version>
		<org.imixs.marty.version>5.0.1</org.imixs.marty.version>
		<org.imixs.adapter.version>3.0.1</org.imixs.adapter.version>
		<org.imixs.ai.version>1.1.1-SNAPSHOT</org.imixs.ai.version>
		<org.imixs.signature.version>1.0.0</org.imixs.signature.version>
		<net.sf.saxon.version>9.9.1-4</net.sf.saxon.version>
		<apache.pdfbox.version>2.0.24</apache.pdfbox.version>
		<!-- test dependencies -->
		<junit.jupiter.version>5.9.2</junit.jupiter.version>
		<mockito.version>5.8.0</mockito.version>

		<custom.webResources>src/main/webapp</custom.webResources>
		<imixs-office.applicationname>imixs-documents</imixs-office.applicationname>
		<!-- Environment Settings -->
		<imixs-office.contextroot>/</imixs-office.contextroot>
		<imixs-office.realm>imixsrealm</imixs-office.realm>
		<imixs-office.jta-data-source>jdbc/office</imixs-office.jta-data-source>
		<imixs-office.IndexDir>lucene/office-workflow-index</imixs-office.IndexDir>
		<!-- jndi Mail res-ref name
		java:/mail/org.imixs.workflow.mail	
		 -->
		<imixs-mail-res-ref-name>java:/mail/org.imixs.workflow.mail</imixs-mail-res-ref-name>

		<!-- Wildfly unpack war -->
		<custom.unpackTypes>war</custom.unpackTypes>
		<jakarta.faces.project_stage>Production</jakarta.faces.project_stage>


	</properties>

	<repositories>
		<repository>
			<id>oss-snapshots</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>


	<profiles>
		<profile>
			<id>docker</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.8</version>
						<executions>
							<execution>
								<phase>install</phase>
								<configuration>
									<target>
										<exec executable="docker">
											<arg value="build" />
											<arg value="-t" />
											<arg value="imixs/imixs-documents" />
											<arg value="./" />
										</exec>
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>docker-hub</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.8</version>
						<executions>
							<execution>
								<phase>install</phase>
								<configuration>
									<target>
										<exec executable="docker">
											<arg value="build" />
											<arg value="-t" />
											<arg value="imixs/imixs-documents:${project.version}" />
											<arg value="./." />
										</exec>
										<exec executable="docker">
											<arg value="push" />
											<arg value="imixs/imixs-documents:${project.version}" />
										</exec>
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>docker-hub-latest</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.8</version>
						<executions>
							<execution>
								<phase>install</phase>
								<configuration>
									<target>
										<exec executable="docker">
											<arg value="build" />
											<arg value="-t" />
											<arg value="imixs/imixs-documents" />
											<arg value="./." />
										</exec>
										<exec executable="docker">
											<arg value="push" />
											<arg value="imixs/imixs-documents" />
										</exec>
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

				</plugins>
			</build>
		</profile>

		<profile>
			<id>debug</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.8</version>
						<executions>
							<execution>
								<phase>install</phase>
								<configuration>
									<target>
										<exec executable="docker">
											<arg value="build" />
											<arg value="-f" />
											<arg value="./Dockerfile-wildfly-debug" />
											<arg value="-t" />
											<arg value="imixs/imixs-documents" />
											<arg value="./." />
										</exec>
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<build>
		<resources>
			<!-- enable resource filtering for multi language version -->
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<plugins>

			<!-- use JDK settings for compiling -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<source>${java.source}</source>
					<target>${java.target}</target>
				</configuration>
			</plugin>

			<!-- Testing JUnit 5 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.22.2</version>
			</plugin>


			<!-- issue #572  
			 	hack for:
			https://stackoverflow.com/questions/75116023/unable-to-make-protected-final-java-lang-class-java-lang-classloader-defineclass
			 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.3.1</version>
				<executions>
					<execution>
						<id>default-test</id>
						<phase>test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<argLine>
								--add-opens java.base/java.lang=ALL-UNNAMED
							</argLine>
						</configuration>
					</execution>
				</executions>
			</plugin>


			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>3.2.0</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
					<webResources>
						<resource>
							<filtering>true</filtering>
							<!-- this is relative to the pom.xml directory -->
							<directory>${custom.webResources}</directory>
							<includes>
								<include>**/WEB-INF/*</include>
								<!-- include any other file types you want to filter -->
							</includes>
						</resource>
					</webResources>
					<workDirectory>target/overlay-war-folder</workDirectory>
					<!-- We exclude libs form the parent WAR artifact -->
					<overlays>
						<overlay>
							<groupId>org.imixs.workflow</groupId>
							<artifactId>imixs-office-workflow-app</artifactId>
							<excludes>
								<exclude>WEB-INF/lib/*.jar</exclude>
							</excludes>
						</overlay>
					</overlays>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>


			<plugin>
				<groupId>org.imixs.maven</groupId>
				<artifactId>manik-hotdeploy-maven-plugin</artifactId>
				<version>2.0.0</version>
				<executions>
					<execution>
						<phase>install</phase>
						<goals>
							<goal>deploy</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<!-- List Source and Target folders for Autodeploy and Hotdeploy -->
					<autodeployments>
						<deployment>
							<!-- wildcard deployment -->
							<source>target/*.{war,ear,jar}</source>
							<target>./docker/deployments/</target>
							<unpack>true</unpack>
						</deployment>
					</autodeployments>
					<hotdeployments>
						<deployment>
							<source>src/main/webapp</source>
							<target>./docker/deployments/imixs-documents.war</target>
						</deployment>
					</hotdeployments>

				</configuration>
			</plugin>

			<!-- relase management -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
			</plugin>
		</plugins>

		<finalName>imixs-documents</finalName>
	</build>

	<dependencies>
		<!-- Jakarta EE -->
		<dependency>
			<groupId>jakarta.platform</groupId>
			<artifactId>jakarta.jakartaee-api</artifactId>
			<version>${jakarta.version}</version>
			<scope>provided</scope>
		</dependency>


		<!-- Imixs Workflow -->
		<dependency>
			<groupId>org.imixs.workflow</groupId>
			<artifactId>imixs-workflow-core</artifactId>
			<type>jar</type>
			<version>${org.imixs.workflow.version}</version>
		</dependency>
		<dependency>
			<groupId>org.imixs.workflow</groupId>
			<artifactId>imixs-workflow-engine</artifactId>
			<type>jar</type>
			<version>${org.imixs.workflow.version}</version>
		</dependency>
		<dependency>
			<groupId>org.imixs.workflow</groupId>
			<artifactId>imixs-workflow-jax-rs</artifactId>
			<type>jar</type>
			<version>${org.imixs.workflow.version}</version>
		</dependency>
		<dependency>
			<groupId>org.imixs.workflow</groupId>
			<artifactId>imixs-workflow-faces</artifactId>
			<type>jar</type>
			<version>${org.imixs.workflow.version}</version>
		</dependency>
		<dependency>
			<groupId>org.imixs.workflow</groupId>
			<artifactId>imixs-workflow-index-lucene</artifactId>
			<version>${org.imixs.workflow.version}</version>
		</dependency>

		<!-- Marty -->
		<dependency>
			<groupId>org.imixs.workflow</groupId>
			<artifactId>imixs-marty</artifactId>
			<type>jar</type>
			<version>${org.imixs.marty.version}</version>
		</dependency>

		<!-- Imixs-Office-Workflow Overlay -->
		<dependency>
			<groupId>org.imixs.workflow</groupId>
			<artifactId>imixs-office-workflow-app</artifactId>
			<type>war</type>
			<version>${org.imixs.office.version}</version>
		</dependency>
		<dependency>
			<groupId>org.imixs.workflow</groupId>
			<artifactId>imixs-office-workflow-util</artifactId>
			<version>${org.imixs.office.version}</version>
		</dependency>

		<!-- Imixs-Archive -->
		<dependency>
			<groupId>org.imixs.workflow</groupId>
			<artifactId>imixs-archive-api</artifactId>
			<version>${org.imixs.archive.version}</version>
		</dependency>
		<dependency>
			<groupId>org.imixs.workflow</groupId>
			<artifactId>imixs-archive-documents</artifactId>
			<version>${org.imixs.archive.version}</version>
		</dependency>
		<dependency>
			<groupId>org.imixs.workflow</groupId>
			<artifactId>imixs-archive-importer</artifactId>
			<version>${org.imixs.archive.version}</version>
		</dependency>
		<!-- -->
		<dependency>
			<groupId>org.apache.pdfbox</groupId>
			<artifactId>pdfbox</artifactId>
			<version>${apache.pdfbox.version}</version>
		</dependency>


		<!-- Imixs-AI -->
		<dependency>
			<groupId>org.imixs.workflow</groupId>
			<artifactId>imixs-ai-workflow</artifactId>
			<version>${org.imixs.ai.version}</version>
		</dependency>

		<!-- Imixs-QR-Code  -->
		<dependency>
			<groupId>org.imixs.workflow</groupId>
			<artifactId>imixs-adapters-qrcode</artifactId>
			<version>${org.imixs.adapter.version}</version>
		</dependency>


		<!-- Imixs-Wopi -->
		<dependency>
			<groupId>org.imixs.workflow</groupId>
			<artifactId>imixs-adapters-wopi</artifactId>
			<version>${org.imixs.adapter.version}</version>
		</dependency>
		<dependency>
			<groupId>org.imixs.workflow</groupId>
			<artifactId>imixs-adapters-odf</artifactId>
			<version>${org.imixs.adapter.version}</version>
		</dependency>


		<!-- Imixs Signature Feature -->
		<dependency>
			<groupId>org.imixs.workflow</groupId>
			<artifactId>imixs-signature-api</artifactId>
			<version>${org.imixs.signature.version}</version>
		</dependency>

		<!-- SEPA -->
		<dependency>
			<groupId>org.imixs.workflow</groupId>
			<artifactId>imixs-adapters-sepa</artifactId>
			<version>${org.imixs.adapter.version}</version>
		</dependency>


		<!-- DATEV -->
		<dependency>
			<groupId>org.imixs.workflow</groupId>
			<artifactId>imixs-adapters-datev</artifactId>
			<version>${org.imixs.adapter.version}</version>
		</dependency>


		<!-- POI Adapter -->
		<dependency>
			<groupId>org.imixs.workflow</groupId>
			<artifactId>imixs-adapters-poi</artifactId>
			<version>${org.imixs.adapter.version}</version>
		</dependency>


		<!-- xsl 2.0 support 
		<dependency>
			<groupId>net.sf.saxon</groupId>
			<artifactId>Saxon-HE</artifactId>
			<version>${net.sf.saxon.version}</version>
		</dependency>
		-->

		<!-- Testing -->

		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>${junit.jupiter.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>${junit.jupiter.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.parsson</groupId>
			<artifactId>jakarta.json</artifactId>
			<version>1.1.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jaxb</groupId>
			<artifactId>jaxb-runtime</artifactId>
			<version>3.0.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>jakarta.xml.bind</groupId>
			<artifactId>jakarta.xml.bind-api</artifactId>
			<version>3.0.0</version>
			<scope>test</scope>
		</dependency>


	</dependencies>
</project>